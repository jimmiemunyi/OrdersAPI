name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
            # postgresql setting
          POSTGRES_DB: orders_api_db_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          ports:
            5432:5432
            # Set health checks to wait until postgres has started
          options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12

      - name: Install dependencies
        run: |
          pip install -- upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in $(seq 1 30); do
            pg_isready -h localhost -p 5432 -U testuser && break
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run tests
        run: pytest tests/

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest

    needs: test  # Ensure the 'test' job has successfully completed before deploying

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
          heroku --version

      - name: Login to Heroku
        run: heroku login -i

      - name: Deploy to Heroku
        run: |
          git remote add heroku https://git.heroku.com/jimmie-orders-api.git
          git push heroku main
